openapi: 3.0.3
x-stoplight:
  id: y7psq33e36tn6
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://petstore3.swagger.io/api/v3'
tags:
  - name: pets
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /pets:
    get:
      tags:
        - pets
      summary: Get a collection of pets
      description: Returns a collection of Pets
      operationId: getAllPets
      responses:
        '200':
          description: Get all the pets
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    x-stoplight:
                      id: yz8u33tzfy3fn
                  age:
                    type: integer
                    x-stoplight:
                      id: 8q6oudts1e38j
        '401':
          description: Unauthorized
        '404':
          description: Pet not found
      parameters:
        - schema:
            type: integer
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: q
    post:
      summary: ''
      operationId: createPet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    x-stoplight:
                      id: peo698p2w8cn8
                  age:
                    type: integer
                    x-stoplight:
                      id: yj5pf08xin1wq
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  x-stoplight:
                    id: 44wwquojht2rn
                age:
                  type: integer
                  x-stoplight:
                    id: fa7i52ml2d2nb
      tags:
        - pets
  '/pets/{petId}':
    get:
      tags:
        - pets
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: [ ]
        - petstore_auth:
            - 'write:pets'
  /books:
    get:
      summary: Your GET endpoint
      tags:
        - books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    x-stoplight:
                      id: ti0xc3j58dcbj
                    items:
                      x-stoplight:
                        id: lj42qnh3ok1mj
                      type: object
                      properties:
                        title:
                          type: string
                          x-stoplight:
                            id: 8cnpovyth7yhv
                        author:
                          type: string
                          x-stoplight:
                            id: ee94jx0j2mboh
      operationId: get-books
    parameters: [ ]
  '/books/{bookId}':
    get:
      summary: Your GET endpoint
      tags:
        - books
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    x-stoplight:
                      id: vyyuez1shtc6p
                  author:
                    type: string
                    x-stoplight:
                      id: ldlnp8hrc5za3
                  reviews:
                    type: array
                    x-stoplight:
                      id: 7aj07cnqljb4f
                    items:
                      x-stoplight:
                        id: bdtpkhnfofyq4
                      type: object
                      properties:
                        text:
                          type: string
                          x-stoplight:
                            id: gxwd1o23m1tp7
                        user:
                          type: object
                          x-stoplight:
                            id: 18mnn4ej07mwd
                          properties:
                            id:
                              type: string
                              x-stoplight:
                                id: a9uxgo7i356qr
                            name:
                              type: string
                              x-stoplight:
                                id: dscyp4mjsi6v1
                        rating:
                          type: integer
                          x-stoplight:
                            id: xa1ssnkd2eag5
                  avatar:
                    type: object
                    x-stoplight:
                      id: 42vpuhcyj83al
                    properties:
                      profileImageUrl:
                        type: string
                        x-stoplight:
                          id: 5w0rkgd2shly1
                      id:
                        type: integer
                        x-stoplight:
                          id: 2jrqwx87fr9y6
      operationId: get-book-by-id
    parameters:
      - schema:
          type: string
        name: bookId
        in: path
        required: true
components:
  schemas:
    Pet:
      title: Pet
      type: object
      xml:
        name: pet
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: doggie
        nicknames:
          type: array
          items:
            type: string
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
      required:
        - name
    Owner:
      title: Owner
      x-stoplight:
        id: nh3q5uitv1ur5
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        age:
          type: integer
  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pet'
        application/xml:
          schema:
            $ref: '#/components/schemas/Pet'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://petstore3.swagger.io/oauth/authorize'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: apihhh_key
      in: header
  responses:
    GetAllPetsResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              pets:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
